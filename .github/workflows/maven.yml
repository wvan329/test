#action的名字
name: Java CI with Maven
#on表示event触发器，也就是在main分支推送代码/提交pr时会触发这个action
on:
  push:
   branches: [ "master" ]

#所有job
jobs:
  #只有一个job：build
  build:
    #action运行的虚拟环境：这个job向github申请了最新的ubuntu系统的虚拟机，用来运行job
    runs-on: ubuntu-latest
    #job的所有步骤
    steps:
      #uses使用action：checkout，这是一个最常用的别人写好的aciton。
      #checkout：检出代码：把项目代码检出到ubuntu虚拟机里面
      - uses: actions/checkout@v4

      - name: Check commit message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: '$COMMIT_MSG'"
          if [[ "$COMMIT_MSG" != "yes" ]]; then
            echo "Message is not exactly 'yes'. Skipping..."
            exit 0
          fi
      
      #往虚拟机安装JDK环境
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        #用with给上面的action传递参数
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SOURCE: 'target/test.jar'
          REMOTE_HOST: 59.110.35.198
          REMOTE_USER: root
          TARGET: '/var/lib/docker/volumes/test_test/_data/test.jar'
          SCRIPT_AFTER: |
            docker restart test-test-1
